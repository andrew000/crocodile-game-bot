---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-prod.yml -o kubernetes -c
    kompose.version: 1.19.0 ()
  creationTimestamp: null
  labels:
    environment: {{.Values.env}}
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-prod.yml -o kubernetes -c
        kompose.version: 1.19.0 ()
      creationTimestamp: null
      labels:
        environment: {{.Values.env}}
        io.kompose.service: backend
    spec:
      containers:
      - env:
        - name: CROCODILE_GAME_BOT_TOKEN
          valueFrom:
            configMapKeyRef:
              key: CROCODILE_GAME_BOT_TOKEN
              name: env
        - name: CROCODILE_GAME_DB_HOST
          valueFrom:
            configMapKeyRef:
              key: CROCODILE_GAME_DB_HOST
              name: env
        - name: CROCODILE_GAME_DB_NAME
          valueFrom:
            configMapKeyRef:
              key: CROCODILE_GAME_DB_NAME
              name: env
        - name: CROCODILE_GAME_DB_PASS
          valueFrom:
            configMapKeyRef:
              key: POSTGRES_PASSWORD
              name: env
        - name: CROCODILE_GAME_DB_PORT
          valueFrom:
            configMapKeyRef:
              key: CROCODILE_GAME_DB_PORT
              name: env
        - name: CROCODILE_GAME_DB_SSLMODE
          valueFrom:
            configMapKeyRef:
              key: CROCODILE_GAME_DB_SSLMODE
              name: env
        - name: CROCODILE_GAME_DB_USER
          valueFrom:
            configMapKeyRef:
              key: CROCODILE_GAME_DB_USER
              name: env
        - name: CROCODILE_GAME_LOGLEVEL
          valueFrom:
            configMapKeyRef:
              key: CROCODILE_GAME_LOGLEVEL
              name: env
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: REDIS_HOST
              name: env
{{- if .Values.devMode }}
        - name: CROCODILE_GAME_DEV
          value: "true"
{{- end }}
        image: {{.Values.image}}
        name: backend
        ports:
        - containerPort: 8080
        resources: {}
      restartPolicy: Always
status: {}
